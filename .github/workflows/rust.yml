name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - name: Install wasm tools (optional)
        run: |
          rustup target add wasm32-unknown-unknown || true
          cargo install --locked wasm-pack || true

      - name: Build sdl2
        run: cargo build --bin sdl2_app --features run_with_sdl2
      - name: Build terminal app
        run: cargo build --bin terminal_app
      - name: Build sauron app
        run: wasm-pack build --release --target=web --features compile_with_sauron
  

      - name: Run tests (show println!)
        run: cargo test --workspace -- --nocapture --features run_with_sdl2 run_with_sauron

      - name: Try build Sauron WASM (optional, non-fatal)
        run: |
          # If sauron app exists, attempt a wasm-pack build; ignore failures
          if [ -f Cargo.toml ] && [ -d src/sauron_app ]; then
            # adjust path if your sauron crate is not the workspace root
            wasm-pack build --target web --out-dir pkg || true
          else
            echo "No sauron_app folder detected, skipping wasm build."
          fi
        shell: bash
