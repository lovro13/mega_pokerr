PRAVILA, ki jih pozabljam:
- kdor je že foldal se preverja samo v betting_system

PRAVILA za funkcijo get_bet, ki je pri vsakem prikazu seveda različna:
vzame &player in u32 -> Option<u32>
// vrne Some(u32), če je pravilno vnešeno in če je prazno vrne None ko hoče foldat
// ne dovoli staviti več denarja kot ga ima player
// če je vnešeno karkoli razen u32 ali prazno je treba vnesti ponovno
// treba še preveriti kakšno stavo mora staviti da ne stavi premalo 
// player ki ga vzame mora igrati!!!! , torej player.playing = true!!!!

- določiti moram kako bo izgledal glavni game loop, da bosta skupaj delovala logika in prikaz

SDL2 app:
do nadaljnega lahko samo raisa usak za BIGBLIND

LOGIC:
TODO-treba narediti struct round in ga ločiti od game, ali pa v game še nekaj implementirati s čimer
bom lahko nadziral kateri del igre je kot npr make_bets, ali pa kaj drugega, saj je itak večina igre 
make_bets

-- preden nadalajujem z SDL2 bi bilo fino, implementirati logiko naprej, v bistvu lahko cel loop, ki pa lahko 
sprejme nek closure ki bo povedal ali naj se igra nadaljuje, ki lahko kasneje tudi naredi da bo malo počakalo preden gre naprej, 
saj ni človeško če se stvari odvijajo konstantno

--Game je treba implementirati z RC, torej reference counter, drugače verjetno en bo šlo